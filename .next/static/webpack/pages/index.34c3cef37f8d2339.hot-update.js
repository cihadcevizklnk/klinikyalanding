"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/functions/index.ts":
/*!********************************!*\
  !*** ./src/functions/index.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getBlog\": function() { return /* binding */ getBlog; },\n/* harmony export */   \"getBlogs\": function() { return /* binding */ getBlogs; },\n/* harmony export */   \"getCities\": function() { return /* binding */ getCities; },\n/* harmony export */   \"getHospitals\": function() { return /* binding */ getHospitals; },\n/* harmony export */   \"getProcedures\": function() { return /* binding */ getProcedures; }\n/* harmony export */ });\nconst getProcedures = (setArr, language)=>{\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Accept\", \"text/plain\");\n    myHeaders.append(\"Authorization\", \"Bearer {{bearerToken}}\");\n    myHeaders.append(\"Cookie\", \"ARRAffinity=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318; ARRAffinitySameSite=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318\");\n    const raw = JSON.stringify({\n        locale: language,\n        pageSize: 100,\n        page: 0\n    });\n    const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n    };\n    fetch(\"https://klinikya-api.azurewebsites.net/api/ReadyMadeProcedure/get-all-ready-made-procedures\", requestOptions).then((response)=>response.json()).then((res)=>{\n        return setArr(res === null || res === void 0 ? void 0 : res.Items);\n    }).catch((error)=>console.log(\"error\", error));\n};\nconst getBlogs = (setArr, language)=>{\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Accept\", \"text/plain\");\n    myHeaders.append(\"Authorization\", \"Bearer {{bearerToken}}\");\n    myHeaders.append(\"Cookie\", \"ARRAffinity=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318; ARRAffinitySameSite=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318\");\n    const raw = JSON.stringify({\n        locale: language,\n        pageSize: 100,\n        page: 0\n    });\n    const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n    };\n    fetch(\"https://klinikya-new-dev.azurewebsites.net/api/Data/get-blogs\", requestOptions).then((response)=>response.json()).then((res)=>{\n        return setArr(res === null || res === void 0 ? void 0 : res.Items);\n    }).catch((error)=>console.log(\"error\", error));\n};\nconst getHospitals = (setArr, language)=>{\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Accept\", \"text/plain\");\n    myHeaders.append(\"Cookie\", \"ARRAffinity=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318; ARRAffinitySameSite=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318\");\n    const raw = JSON.stringify({\n        locale: language,\n        pageSize: 17583011,\n        page: 0\n    });\n    const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n    };\n    fetch(\"https://klinikya-api.azurewebsites.net/api/HospitalAdmin/get-all-hospitals\", requestOptions).then((response)=>response.json()).then((res)=>{\n        return setArr(res === null || res === void 0 ? void 0 : res.Items);\n    }).catch((error)=>console.log(\"error\", error));\n};\nconst getCities = (setArr, language)=>{\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Accept\", \"text/plain\");\n    myHeaders.append(\"Cookie\", \"ARRAffinity=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318; ARRAffinitySameSite=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318\");\n    const raw = JSON.stringify({\n        locale: language,\n        isActive: true\n    });\n    const requestOptions = {\n        method: \"POST\",\n        headers: myHeaders,\n        body: raw,\n        redirect: \"follow\"\n    };\n    fetch(\"https://klinikya-api.azurewebsites.net/api/Information/get-city-districts\", requestOptions).then((response)=>response.json()).then((res)=>{\n        return setArr(res === null || res === void 0 ? void 0 : res.Items);\n    }).catch((error)=>console.log(\"error\", error));\n};\nconst getBlog = (id, locale, setArr)=>{\n    var myHeaders = new Headers();\n    myHeaders.append(\"Accept\", \"text/plain\");\n    myHeaders.append(\"Cookie\", \"ARRAffinity=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318; ARRAffinitySameSite=280acb3c0367cac76a456a7866003bea050374037143b24243d718b2c4cd2318\");\n    var requestOptions = {\n        method: \"GET\",\n        headers: myHeaders,\n        redirect: \"follow\"\n    };\n    fetch(\"https://klinikya-api.azurewebsites.net/api/Data/get-blog?id=\".concat(id, \"&locale=\").concat(locale), requestOptions).then((response)=>response.json()).then((res)=>{\n        return setArr(res === null || res === void 0 ? void 0 : res.Item);\n    }).catch((error)=>console.log(\"error\", error));\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/functions/index.ts\n"));

/***/ })

});